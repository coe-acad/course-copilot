{
    "id": "mark-scheme-generator",
    "prompt": "For each question, assign marks as given in the question paper, either given in bracket or against each question. Generate a numbered Scheme of Evaluation in this format, for the given Question X:\n\nQuestion X: <verbatim question>\n\nAnswer template: Core concepts or their clear equivalents that a full answer must reference to for the specific question, arranged in logical order \n\nMarking Scheme:\n\n(A marks) A bullet that describes the first key expectation (concept or application) in context.\n\n(B marks) A bullet for the second expectation.\n\n…\n\n(–C marks) \n\nEnsure that:\n\nThe sum of A + B + … equals the total marks for Question X. Keep A, B, C, … as integers only if the maximum marks for the question exceed 3. Try to maximize the number of bullets.\n\n Bullets must call out the concept or context the student needs to cover, but need not use verbatim phrasing — equivalent meaning is fine.\n\n Assessment Objectives are stated briefly at the top (for example, Conceptual Understanding, Application & Problem-Solving, Relevance & Specificity).\n\n⚠️ **IMPORTANT**: your **only** output must be a single JSON object (for single questions) or a JSON array of such objects (for batch), each with these keys:\n```json\n{\n  \"question_number\": <int>,\n  \"question-text\": \"<string>\",\n  \"answer_template\": \"<string>\",\n  \"marking_scheme\": [\"<bullet 1>\", \"<bullet 2>\", …],\n  \"deductions\": [\"<bullet 1>\", …],\n  \"notes\": \"<string>\"\n} \n\nNow generate a JSON array of mark-scheme objects for each of the following questions.\nEach object must have the same keys listed above.\n\nQuestion paper: \n{{file_names}} (NOTE: Make sure you use only this file {{file_names}} and give the respone for all the questions in the question paper)\n", 
    "required_input_variables": ["file_names"]
}
